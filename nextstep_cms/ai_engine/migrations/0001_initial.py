# Generated by Django 5.2.4 on 2025-07-12 20:27

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('config_type', models.CharField(choices=[('job_analysis', 'Job Analysis'), ('career_advice', 'Career Advice'), ('skill_recommendation', 'Skill Recommendation'), ('market_analysis', 'Market Analysis'), ('resume_review', 'Resume Review')], max_length=30)),
                ('model_name', models.CharField(default='gpt-4', max_length=100)),
                ('temperature', models.FloatField(default=0.7)),
                ('max_tokens', models.PositiveIntegerField(default=2000)),
                ('system_prompt', models.TextField()),
                ('user_prompt_template', models.TextField()),
                ('available_variables', models.JSONField(blank=True, default=list)),
                ('default_variables', models.JSONField(blank=True, default=dict)),
                ('response_format', models.CharField(choices=[('text', 'Plain Text'), ('json', 'JSON'), ('markdown', 'Markdown')], default='text', max_length=20)),
                ('total_uses', models.PositiveIntegerField(default=0)),
                ('average_response_time', models.FloatField(blank=True, null=True)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ai_configurations',
                'ordering': ['config_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AIJobAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_description', models.TextField()),
                ('job_title', models.CharField(blank=True, max_length=500, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('analysis_summary', models.TextField()),
                ('detailed_analysis', models.JSONField(blank=True, default=dict)),
                ('required_qualifications', models.JSONField(blank=True, default=dict)),
                ('required_skills', models.JSONField(blank=True, default=list)),
                ('preferred_skills', models.JSONField(blank=True, default=list)),
                ('responsibilities', models.JSONField(blank=True, default=list)),
                ('career_level', models.CharField(blank=True, max_length=50, null=True)),
                ('industry', models.CharField(blank=True, max_length=255, null=True)),
                ('growth_potential', models.CharField(blank=True, max_length=100, null=True)),
                ('work_environment', models.CharField(blank=True, max_length=100, null=True)),
                ('salary_analysis', models.JSONField(blank=True, default=dict)),
                ('culture_indicators', models.JSONField(blank=True, default=list)),
                ('company_values', models.JSONField(blank=True, default=list)),
                ('match_score', models.FloatField()),
                ('match_breakdown', models.JSONField(blank=True, default=dict)),
                ('strengths', models.JSONField(blank=True, default=list)),
                ('gaps', models.JSONField(blank=True, default=list)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('improvement_suggestions', models.JSONField(blank=True, default=list)),
                ('ai_model_used', models.CharField(default='gpt-4', max_length=100)),
                ('tokens_used', models.PositiveIntegerField(default=0)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('user_feedback', models.TextField(blank=True, null=True)),
                ('was_helpful', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_analyses', to='profiles.userprofile')),
            ],
            options={
                'db_table': 'ai_job_analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnonymousSearch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.TextField()),
                ('search_type', models.CharField(choices=[('general', 'General Career Advice'), ('career_path', 'Career Path Exploration'), ('skills', 'Skills Development'), ('industry', 'Industry Information'), ('salary', 'Salary Information'), ('education', 'Education Requirements')], default='general', max_length=20)),
                ('response', models.TextField()),
                ('suggestions', models.JSONField(blank=True, default=list)),
                ('user_context', models.JSONField(blank=True, default=dict)),
                ('search_metadata', models.JSONField(blank=True, default=dict)),
                ('ai_model_used', models.CharField(default='gpt-4', max_length=100)),
                ('tokens_used', models.PositiveIntegerField(default=0)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True, null=True)),
                ('response_quality_score', models.FloatField(blank=True, null=True)),
                ('user_engagement_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'anonymous_searches',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['search_type'], name='anonymous_s_search__d87f3d_idx'), models.Index(fields=['created_at'], name='anonymous_s_created_c9413f_idx')],
            },
        ),
        migrations.CreateModel(
            name='AIFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type', models.CharField(choices=[('job_analysis', 'Job Analysis'), ('career_advice', 'Career Advice'), ('skill_recommendation', 'Skill Recommendation'), ('job_match', 'Job Match'), ('anonymous_search', 'Anonymous Search')], max_length=30)),
                ('content_id', models.UUIDField()),
                ('rating', models.PositiveSmallIntegerField()),
                ('feedback_text', models.TextField(blank=True, null=True)),
                ('accuracy', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('relevance', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('helpfulness', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('clarity', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('would_recommend', models.BooleanField(blank=True, null=True)),
                ('feedback_metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.userprofile')),
            ],
            options={
                'db_table': 'ai_feedback',
                'ordering': ['-created_at'],
                'unique_together': {('user_profile', 'content_type', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='AIUsageAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feature_type', models.CharField(choices=[('job_analysis', 'Job Analysis'), ('career_advice', 'Career Advice'), ('anonymous_search', 'Anonymous Search'), ('skill_gap_analysis', 'Skill Gap Analysis'), ('job_matching', 'Job Matching')], max_length=30)),
                ('ai_model', models.CharField(max_length=100)),
                ('tokens_consumed', models.PositiveIntegerField()),
                ('processing_time', models.FloatField()),
                ('response_quality', models.FloatField(blank=True, null=True)),
                ('user_satisfaction', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('session_data', models.JSONField(blank=True, default=dict)),
                ('error_occurred', models.BooleanField(default=False)),
                ('error_details', models.TextField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='profiles.userprofile')),
            ],
            options={
                'db_table': 'ai_usage_analytics',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['feature_type', 'timestamp'], name='ai_usage_an_feature_e309d0_idx'), models.Index(fields=['user_profile', 'timestamp'], name='ai_usage_an_user_pr_80b900_idx')],
            },
        ),
    ]

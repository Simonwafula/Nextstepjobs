# Generated by Django 5.2.4 on 2025-07-12 20:27

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('industry', models.CharField(blank=True, max_length=255, null=True)),
                ('company_size', models.CharField(blank=True, choices=[('startup', '1-10 employees'), ('small', '11-50 employees'), ('medium', '51-200 employees'), ('large', '201-1000 employees'), ('enterprise', '1000+ employees')], max_length=20, null=True)),
                ('founded_year', models.PositiveIntegerField(blank=True, null=True)),
                ('headquarters', models.CharField(blank=True, max_length=255, null=True)),
                ('locations', models.JSONField(blank=True, default=list)),
                ('culture_description', models.TextField(blank=True, null=True)),
                ('benefits', models.JSONField(blank=True, default=list)),
                ('remote_policy', models.CharField(blank=True, choices=[('on_site', 'On-site only'), ('remote', 'Remote-first'), ('hybrid', 'Hybrid'), ('flexible', 'Flexible')], max_length=20, null=True)),
                ('total_jobs_posted', models.PositiveIntegerField(default=0)),
                ('hiring_frequency', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'db_table': 'companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('excluded_keywords', models.JSONField(blank=True, default=list)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('remote_only', models.BooleanField(default=False)),
                ('job_types', models.JSONField(blank=True, default=list)),
                ('experience_levels', models.JSONField(blank=True, default=list)),
                ('industries', models.JSONField(blank=True, default=list)),
                ('min_salary', models.PositiveIntegerField(blank=True, null=True)),
                ('max_salary', models.PositiveIntegerField(blank=True, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('instant', 'Instant'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('total_matches', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_alerts', to='profiles.userprofile')),
            ],
            options={
                'db_table': 'job_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source', models.CharField(choices=[('linkedin', 'LinkedIn'), ('indeed', 'Indeed'), ('brighter_monday', 'BrighterMonday'), ('glassdoor', 'Glassdoor'), ('company_website', 'Company Website'), ('manual', 'Manual Entry')], max_length=50)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('source_url', models.URLField()),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('requirements', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('remote_friendly', models.BooleanField(default=False)),
                ('work_arrangement', models.CharField(choices=[('on_site', 'On-site'), ('remote', 'Remote'), ('hybrid', 'Hybrid')], default='on_site', max_length=20)),
                ('job_type', models.CharField(choices=[('full_time', 'Full-time'), ('part_time', 'Part-time'), ('contract', 'Contract'), ('freelance', 'Freelance'), ('internship', 'Internship')], default='full_time', max_length=20)),
                ('experience_level', models.CharField(blank=True, choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('principal', 'Principal'), ('director', 'Director')], max_length=20, null=True)),
                ('salary_min', models.PositiveIntegerField(blank=True, null=True)),
                ('salary_max', models.PositiveIntegerField(blank=True, null=True)),
                ('salary_currency', models.CharField(default='USD', max_length=10)),
                ('salary_period', models.CharField(choices=[('hourly', 'Hourly'), ('monthly', 'Monthly'), ('annual', 'Annual')], default='annual', max_length=20)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('quality_score', models.FloatField(blank=True, null=True)),
                ('posted_date', models.DateTimeField(blank=True, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('scraped_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_postings', to='jobs.company')),
            ],
            options={
                'db_table': 'job_postings',
                'ordering': ['-posted_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessedJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ai_summary', models.TextField(blank=True, null=True)),
                ('ai_industry_category', models.CharField(blank=True, max_length=255, null=True)),
                ('ai_role_level', models.CharField(blank=True, max_length=50, null=True)),
                ('ai_company_culture', models.TextField(blank=True, null=True)),
                ('required_skills', models.JSONField(blank=True, default=list)),
                ('preferred_skills', models.JSONField(blank=True, default=list)),
                ('technical_skills', models.JSONField(blank=True, default=list)),
                ('soft_skills', models.JSONField(blank=True, default=list)),
                ('education_requirements', models.JSONField(blank=True, default=dict)),
                ('experience_requirements', models.JSONField(blank=True, default=dict)),
                ('certifications_required', models.JSONField(blank=True, default=list)),
                ('complexity_score', models.FloatField(blank=True, null=True)),
                ('competitiveness_score', models.FloatField(blank=True, null=True)),
                ('growth_potential', models.CharField(blank=True, max_length=50, null=True)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('completeness_score', models.FloatField(blank=True, null=True)),
                ('accuracy_score', models.FloatField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='processed_data', to='jobs.jobposting')),
            ],
            options={
                'db_table': 'processed_jobs',
                'ordering': ['-processed_at'],
            },
        ),
        migrations.CreateModel(
            name='JobMatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overall_match_score', models.FloatField()),
                ('skills_match_score', models.FloatField(default=0.0)),
                ('experience_match_score', models.FloatField(default=0.0)),
                ('location_match_score', models.FloatField(default=0.0)),
                ('education_match_score', models.FloatField(default=0.0)),
                ('matching_skills', models.JSONField(blank=True, default=list)),
                ('missing_skills', models.JSONField(blank=True, default=list)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('viewed', models.BooleanField(default=False)),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('calculated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_matches', to='profiles.userprofile')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_matches', to='jobs.processedjob')),
            ],
            options={
                'db_table': 'job_matches',
                'ordering': ['-overall_match_score', '-calculated_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('interested', 'Interested'), ('applied', 'Applied'), ('interviewing', 'Interviewing'), ('rejected', 'Rejected'), ('declined', 'Declined'), ('reference', 'Reference')], default='interested', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('application_date', models.DateTimeField(blank=True, null=True)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.jobposting')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to='profiles.userprofile')),
            ],
            options={
                'db_table': 'saved_jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['source', 'external_id'], name='job_posting_source_470bc3_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['is_active', 'is_processed'], name='job_posting_is_acti_748b24_idx'),
        ),
        migrations.AddIndex(
            model_name='jobposting',
            index=models.Index(fields=['posted_date'], name='job_posting_posted__b2db8b_idx'),
        ),
        migrations.AddIndex(
            model_name='jobmatch',
            index=models.Index(fields=['user_profile', 'overall_match_score'], name='job_matches_user_pr_b882f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='jobmatch',
            unique_together={('user_profile', 'job')},
        ),
        migrations.AlterUniqueTogether(
            name='savedjob',
            unique_together={('user_profile', 'job')},
        ),
    ]
